{
  "entities": {
    "Product": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Product",
      "type": "object",
      "description": "Represents a product sold by Herbolario Barcelona.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the product."
        },
        "name": {
          "type": "string",
          "description": "Name of the product."
        },
        "description": {
          "type": "string",
          "description": "Detailed description of the product."
        },
        "price": {
          "type": "number",
          "description": "Price of the product."
        },
        "imageUrl": {
          "type": "string",
          "description": "URL of the product image.",
          "format": "uri"
        },
        "benefitIds": {
          "type": "array",
          "description": "References to Benefits. (Relationship: Benefit N:N Product)",
          "items": {
            "type": "string"
          }
        },
        "isBestSeller": {
          "type": "boolean",
          "description": "Indicates if the product is a best seller."
        }
      },
      "required": [
        "id",
        "name",
        "description",
        "price",
        "imageUrl"
      ]
    },
    "Benefit": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Benefit",
      "type": "object",
      "description": "Represents a health benefit category (e.g., Cerebro, Energ√≠a).",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the benefit."
        },
        "name": {
          "type": "string",
          "description": "Name of the benefit category."
        },
        "description": {
          "type": "string",
          "description": "Description of the benefit category."
        }
      },
      "required": [
        "id",
        "name",
        "description"
      ]
    },
    "ProductStack": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "ProductStack",
      "type": "object",
      "description": "Represents a pre-defined product stack or bundle (e.g., Productividad, Nervioso).",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the product stack."
        },
        "name": {
          "type": "string",
          "description": "Name of the product stack."
        },
        "description": {
          "type": "string",
          "description": "Description of the product stack."
        },
        "productIds": {
          "type": "array",
          "description": "References to Products in this stack. (Relationship: Product N:N ProductStack)",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "id",
        "name",
        "description"
      ]
    },
    "EducationalContent": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "EducationalContent",
      "type": "object",
      "description": "Represents educational content such as guides, recipes, or scientific information.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the content."
        },
        "title": {
          "type": "string",
          "description": "Title of the educational content."
        },
        "content": {
          "type": "string",
          "description": "The actual content (e.g., MDX or HTML)."
        },
        "contentType": {
          "type": "string",
          "description": "Type of content (e.g., 'guide', 'recipe', 'science')."
        }
      },
      "required": [
        "id",
        "title",
        "content",
        "contentType"
      ]
    },
    "Review": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Review",
      "type": "object",
      "description": "Represents a product review.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the review."
        },
        "productId": {
          "type": "string",
          "description": "Reference to Product being reviewed. (Relationship: Product 1:N Review)"
        },
        "rating": {
          "type": "number",
          "description": "Rating given by the user (e.g., 1-5)."
        },
        "comment": {
          "type": "string",
          "description": "Text of the review."
        },
        "author": {
          "type": "string",
          "description": "Author of the review (e.g., user name or anonymous)."
        },
        "date": {
          "type": "string",
          "description": "Date of the review.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "productId",
        "rating",
        "comment",
        "author",
        "date"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/products/{productId}",
        "definition": {
          "entityName": "Product",
          "schema": {
            "$ref": "#/backend/entities/Product"
          },
          "description": "Stores product information.",
          "params": [
            {
              "name": "productId",
              "description": "The unique identifier of the product."
            }
          ]
        }
      },
      {
        "path": "/benefits/{benefitId}",
        "definition": {
          "entityName": "Benefit",
          "schema": {
            "$ref": "#/backend/entities/Benefit"
          },
          "description": "Stores information about product benefits.",
          "params": [
            {
              "name": "benefitId",
              "description": "The unique identifier of the benefit."
            }
          ]
        }
      },
      {
        "path": "/productStacks/{productStackId}",
        "definition": {
          "entityName": "ProductStack",
          "schema": {
            "$ref": "#/backend/entities/ProductStack"
          },
          "description": "Stores pre-defined product stacks or bundles.",
          "params": [
            {
              "name": "productStackId",
              "description": "The unique identifier of the product stack."
            }
          ]
        }
      },
      {
        "path": "/educationalContent/{educationalContentId}",
        "definition": {
          "entityName": "EducationalContent",
          "schema": {
            "$ref": "#/backend/entities/EducationalContent"
          },
          "description": "Stores educational content like guides and recipes.",
          "params": [
            {
              "name": "educationalContentId",
              "description": "The unique identifier of the educational content."
            }
          ]
        }
      },
      {
        "path": "/products/{productId}/reviews/{reviewId}",
        "definition": {
          "entityName": "Review",
          "schema": {
            "$ref": "#/backend/entities/Review"
          },
          "description": "Stores product reviews.",
          "params": [
            {
              "name": "productId",
              "description": "The unique identifier of the product."
            },
            {
              "name": "reviewId",
              "description": "The unique identifier of the review."
            }
          ]
        }
      }
    ],
    "reasoning": "The Firestore structure is designed to efficiently manage product information, benefits, product stacks, educational content, and reviews for the Herbolario Barcelona application. The core principle is to maintain Authorization Independence and facilitate secure list operations.\n\n*   **Products, Benefits, ProductStacks, and EducationalContent are stored in root-level collections.** This allows for simple queries and management of these global resources.  Since no specific ownership or private access is mentioned for these entities, they are treated as public and globally accessible.\n*   **Reviews are stored as a subcollection of Products.** This facilitates easy retrieval of reviews for a specific product.  Since no user-specific information is associated with reviews (beyond the 'author' field), and no mention of user ownership of reviews exists, the structure assumes a global review system.\n\n**Authorization Independence:** Since all collections are globally accessible, no denormalization is needed.\n\n**QAPs:** The structure enables secure list operations because:\n\n*   Each collection stores only one type of data, ensuring homogenous security posture.\n*   No complex filtering is required in the rules, as each collection serves a specific purpose."
  }
}